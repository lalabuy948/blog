<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Env on </title>
    <link>https://mrpopov.com/tags/env/</link>
    <description>Recent content in Env on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Sep 2020 10:07:13 +0200</lastBuildDate><atom:link href="https://mrpopov.com/tags/env/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flexible Env in Go V2</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go-v2/</link>
      <pubDate>Fri, 25 Sep 2020 10:07:13 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go-v2/</guid>
      <description>&lt;h1 id=&#34;lalabuy948genvutilshttpsgithubcomlalabuy948genvutils&#34;&gt;&lt;a href=&#34;https://github.com/lalabuy948/genvutils&#34;&gt;lalabuy948/genvutils&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;As you probably saw my founding of two nice libraries that allow you beauty and easy abstraction on dot and just environment variables. You can check it &lt;a href=&#34;../../posts/flexible-env-in-go/&#34;&gt;there&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After some time I decided to create another open-source library for the world and I merged the functionality of packages which you can find in the article above. I started from scratch and you are more than welcome to have look on it on my GitHub -&amp;gt; &lt;a href=&#34;https://github.com/lalabuy948/genvutils&#34;&gt;github.com/lalabuy948/genvutils&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hashicorp Vault as Environment Manager</title>
      <link>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</link>
      <pubDate>Sat, 20 Jun 2020 20:09:43 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</guid>
      <description>&lt;h1 id=&#34;how-to-use-hashicorp-vault-as-dot-environment-manager&#34;&gt;How to use Hashicorp Vault as dot environment manager?&lt;/h1&gt;
&lt;p&gt;I decided to share this because I was looking for small, simple and easy to use tool where I would store dotenv secrets for my apps. And I found this nice and elegant solution which will allow you to control your application secrets with small bash script. ðŸ™‚&lt;/p&gt;
&lt;h2 id=&#34;pre-requirements&#34;&gt;Pre Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installed vault&lt;/li&gt;
&lt;li&gt;Finish setup instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find nicely described steps here: &lt;a href=&#34;https://learn.hashicorp.com/vault/getting-started/install&#34;&gt;Getting started&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flexible Env in Go</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go/</link>
      <pubDate>Sat, 07 Mar 2020 09:00:59 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go/</guid>
      <description>&lt;h2 id=&#34;forewords&#34;&gt;Forewords&lt;/h2&gt;
&lt;p&gt;I was doing hobby project, nothing special, server with authentication few endpoints and connection to database.
I wrapped this project in docker to distribute project to another developer, he wanted to help with fronted but not that fluent at the backend part.
Then I realized that my friend does not want to struggle with database setup and so on. So, solution was straight forward - docker-compose.&lt;/p&gt;
&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;
&lt;p&gt;I prefer using &lt;code&gt;.env&lt;/code&gt; instead of typing stuff to cli. I found out really elegant solution. You can still use &lt;code&gt;.env&lt;/code&gt; and parse it easily with
&lt;code&gt;github.com/caarlos0/env/v6&lt;/code&gt;, specify default values or even load file (certificates etc). But in docker-compose you need to specify same ports for database for example. Here comes &lt;code&gt;github.com/joho/godotenv&lt;/code&gt;, if you provide environment variables via dockerfile or docker-compose it will override constants in your &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
