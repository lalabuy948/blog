<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Mr. Popov</title>
    <link>https://mrpopov.com/tags/code/</link>
    <description>Recent content in code on Mr. Popov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Daniil Popov</copyright>
    <lastBuildDate>Thu, 11 Mar 2021 17:11:54 +0100</lastBuildDate><atom:link href="https://mrpopov.com/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notion Github Backup</title>
      <link>https://mrpopov.com/posts/notion-github-backup/</link>
      <pubDate>Thu, 11 Mar 2021 17:11:54 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/notion-github-backup/</guid>
      <description>Data is expensive I write around 2-3 important notes a day. And don&amp;rsquo;t actually worry if my laptop will be stolen, but the data on it..
Since Im heavy notion user I was looking for automated backup solution. Not that I don&amp;rsquo;t trust notion, trust but verify, right?
Backup Create a private github repo Go to actions tab and click on set up a workflow yourself -&amp;gt; Paste this yml file name: &amp;#34;Notion backup&amp;#34; on: push: branches: - main schedule: - cron: &amp;#34;0 0 * * *&amp;#34; jobs: backup: runs-on: ubuntu-latest name: Backup timeout-minutes: 15 steps: - uses: actions/checkout@v2 - uses: actions/setup-node@v2 with: node-version: &amp;#34;12&amp;#34; - name: Setup dependencies run: npm install -g notion-backup - name: Run backup run: notion-backup env: NOTION_TOKEN: ${{ secrets.</description>
    </item>
    
    <item>
      <title>Recursive blog post or Github Codespaces</title>
      <link>https://mrpopov.com/posts/recursive-blog-post-codespaces/</link>
      <pubDate>Thu, 25 Feb 2021 21:19:26 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/recursive-blog-post-codespaces/</guid>
      <description>I already posted a few thoughts about the iPad in the life of a developer. When I got a message from GitHub that I have beta access to codespaces I was super excited and started looking for a project which I can try to move to the cloud development environment to try it out. Due to the lack of small cozy projects which wouldn&amp;rsquo;t require docker-compose with 10 services, the first thing which I setup here is my blog since it&amp;rsquo;s just Hugo.</description>
    </item>
    
    <item>
      <title>Flexible Env in Go V2</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go-v2/</link>
      <pubDate>Fri, 25 Sep 2020 10:07:13 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go-v2/</guid>
      <description>lalabuy948/genvutils Motivation As you probably saw my founding of two nice libraries that allow you beauty and easy abstraction on dot and just environment variables. You can check it there
After some time I decided to create another open-source library for the world and I merged the functionality of packages which you can find in the article above. I started from scratch and you are more than welcome to have look on it on my GitHub -&amp;gt; github.</description>
    </item>
    
    <item>
      <title>https://typ.life</title>
      <link>https://mrpopov.com/posts/typ.life/</link>
      <pubDate>Fri, 21 Aug 2020 13:19:54 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/typ.life/</guid>
      <description>r/mk Due to quarantine, I had to set up my first home office. I never had anything at home except a laptop, because I can work anywhere, like in the office, cafe, park but not at ducking home. I have no idea how people can concentrate and don&amp;rsquo;t open the fridge every five minutes&amp;hellip; So, I had to suffer&amp;hellip; And I decided to adapt my small cabinet to trick my brain that I&amp;rsquo;m sitting in the office.</description>
    </item>
    
    <item>
      <title>Hashicorp Vault as Environment Manager</title>
      <link>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</link>
      <pubDate>Sat, 20 Jun 2020 20:09:43 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</guid>
      <description>How to use Hashicorp Vault as dot environment manager? I decided to share this because I was looking for small, simple and easy to use tool where I would store dotenv secrets for my apps. And I found this nice and elegant solution which will allow you to control your application secrets with small bash script. ðŸ™‚
Pre Requirements Installed vault Finish setup instructions You can find nicely described steps here: Getting started</description>
    </item>
    
    <item>
      <title>Testing Mailer in Go</title>
      <link>https://mrpopov.com/posts/testing-mailer-in-go/</link>
      <pubDate>Sun, 08 Mar 2020 19:23:14 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/testing-mailer-in-go/</guid>
      <description>Forewords I needed a way to test mail confirmation. When you are dealing with deb authentication you would like to be sure that this email exist. And usually I use is_email_confirmed column next to user credentials in the database table. Once user hits siging endpoint as last step I send an email with confirmation token.
I was looking on few popular tools across the Internet:
https://mailtrap.io/ https://mailcow.email/ https://mailu.io/1.7/ https://poste.io/ What I found My requirements were: run in docker, easy to config, basic functionality to render email.</description>
    </item>
    
    <item>
      <title>Flexible Env in Go</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go/</link>
      <pubDate>Sat, 07 Mar 2020 09:00:59 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go/</guid>
      <description>Forewords I was doing hobby project, nothing special, server with authentication few endpoints and connection to database. I wrapped this project in docker to distribute project to another developer, he wanted to help with fronted but not that fluent at the backend part. Then I realized that my friend does not want to struggle with database setup and so on. So, solution was straight forward - docker-compose.
Problem I prefer using .</description>
    </item>
    
  </channel>
</rss>
