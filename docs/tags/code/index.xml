<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on </title>
    <link>https://mrpopov.com/tags/code/</link>
    <description>Recent content in Code on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Oct 2025 21:55:18 +0200</lastBuildDate><atom:link href="https://mrpopov.com/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elixir Liveview Single Binary</title>
      <link>https://mrpopov.com/posts/elixir-liveview-single-binary/</link>
      <pubDate>Mon, 06 Oct 2025 21:55:18 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/elixir-liveview-single-binary/</guid>
      <description>&lt;p&gt;We had two repos of Elixir, seventy-five LiveView components, five sheets of high-powered Phoenix channels, a saltshaker half-full of SQLite databases, and a whole multicolored collection of Burrito deployables, Tauri binaries, WebView wrappers, hot-reloaders&amp;hellip; Also, a quart of WebSockets, a quart of GenServers, a case of Ecto queries, a pint of raw BEAM bytecode, and two dozen supervisors.&lt;/p&gt;
&lt;p&gt;The only thing that really worried me was the WebView. There is nothing in the world more helpless and irresponsible and depraved than a developer in the depths of a cross-platform binge, and I knew we&amp;rsquo;d get into that rotten stuff pretty soon.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Connect Livebook to Phoenix on Vps</title>
      <link>https://mrpopov.com/posts/connect-livebook-to-phoenix-on-vps/</link>
      <pubDate>Sat, 03 Aug 2024 14:19:03 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/connect-livebook-to-phoenix-on-vps/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://livebook.dev&#34;&gt;Livebook&lt;/a&gt; is very powerful application which can be used in many different ways with your &lt;a href=&#34;https://www.phoenixframework.org&#34;&gt;Phoneix&lt;/a&gt; project.
I have few apps running on my VPS and sometimes I would like to run some functions without creating interface for them from admin side, such as cache clean up. Perhaps run some analytical queries to the database and much more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ultimate Tech Scaling Guide</title>
      <link>https://mrpopov.com/posts/ultimate-tech-scaling-guide/</link>
      <pubDate>Tue, 16 Jul 2024 21:23:11 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/ultimate-tech-scaling-guide/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Single File Chat in Elixir Phoenix</title>
      <link>https://mrpopov.com/posts/single-file-chat-in-elixir-phoenix/</link>
      <pubDate>Fri, 12 Jul 2024 23:46:53 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/single-file-chat-in-elixir-phoenix/</guid>
      <description>&lt;h2 id=&#34;meet-phonenixplaygroundhttpshexdocspmphoenix_playgroundreadmehtml&#34;&gt;Meet &lt;a href=&#34;https://hexdocs.pm/phoenix_playground/readme.html&#34;&gt;PhonenixPlayground&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I found this library on github suggestions and I always wanted to have something simple and quick to test out LiveView prototypes. What can be quicker than opening Livebook and trying something there? Folks behind &lt;a href=&#34;https://hexdocs.pm/phoenix_playground/readme.html&#34;&gt;PhonenixPlayground&lt;/a&gt; made both of my wishes come true!&lt;/p&gt;
&lt;p&gt;If you would like jump straight into the code:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://livebook.dev/run?url=https%3A%2F%2Fmrpopov.com%2Fposts%2Fsingle-file-chat-in-elixir-phoenix%2Fphoenix-dirty-chat.livemd&#34;&gt;&lt;img alt=&#34;Run in Livebook&#34; src=&#34;https://livebook.dev/badge/v1/pink.svg&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Notion Github Backup</title>
      <link>https://mrpopov.com/posts/notion-github-backup/</link>
      <pubDate>Thu, 11 Mar 2021 17:11:54 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/notion-github-backup/</guid>
      <description>&lt;h2 id=&#34;data-is-expensive&#34;&gt;Data is expensive&lt;/h2&gt;
&lt;p&gt;I write around 2-3 important notes a day. And don&amp;rsquo;t actually worry if my laptop will be stolen, but the data on it..&lt;/p&gt;
&lt;p&gt;Since Im heavy notion user I was looking for automated backup solution. Not that I don&amp;rsquo;t trust notion, trust but verify, right?&lt;/p&gt;
&lt;h2 id=&#34;backup&#34;&gt;Backup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a private github repo&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;create private repo&#34; src=&#34;../../img/notion-github-backup/private_repo.webp&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Go to actions tab and click on &lt;code&gt;set up a workflow yourself -&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;set up workflow&#34; src=&#34;../../img/notion-github-backup/setup_workflow.webp&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recursive blog post or Github Codespaces</title>
      <link>https://mrpopov.com/posts/recursive-blog-post-codespaces/</link>
      <pubDate>Thu, 25 Feb 2021 21:19:26 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/recursive-blog-post-codespaces/</guid>
      <description>&lt;p&gt;I already posted a few thoughts about the iPad in the life of a developer. When I got a message from GitHub that I have beta access to &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;codespaces&lt;/a&gt; I was super excited and started looking for a project which I can try to move to the cloud development environment to try it out. Due to the lack of small cozy projects which wouldn&amp;rsquo;t require docker-compose with 10 services, the first thing which I setup here is my blog since it&amp;rsquo;s just Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flexible Env in Go V2</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go-v2/</link>
      <pubDate>Fri, 25 Sep 2020 10:07:13 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go-v2/</guid>
      <description>&lt;h1 id=&#34;lalabuy948genvutilshttpsgithubcomlalabuy948genvutils&#34;&gt;&lt;a href=&#34;https://github.com/lalabuy948/genvutils&#34;&gt;lalabuy948/genvutils&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;As you probably saw my founding of two nice libraries that allow you beauty and easy abstraction on dot and just environment variables. You can check it &lt;a href=&#34;../../posts/flexible-env-in-go/&#34;&gt;there&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After some time I decided to create another open-source library for the world and I merged the functionality of packages which you can find in the article above. I started from scratch and you are more than welcome to have look on it on my GitHub -&amp;gt; &lt;a href=&#34;https://github.com/lalabuy948/genvutils&#34;&gt;github.com/lalabuy948/genvutils&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>https://typ.life</title>
      <link>https://mrpopov.com/posts/typ.life/</link>
      <pubDate>Fri, 21 Aug 2020 13:19:54 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/typ.life/</guid>
      <description>&lt;h2 id=&#34;rmkhttpswwwredditcomrmechanicalkeyboards&#34;&gt;&lt;a href=&#34;https://www.reddit.com/r/MechanicalKeyboards/&#34;&gt;r/mk&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Due to quarantine, I had to set up my first home office. I never had anything at home except a laptop, because I can work anywhere, like in the office, cafe, park but not at ducking home. I have no idea how people can concentrate and don&amp;rsquo;t open the fridge every five minutes&amp;hellip; So, I had to suffer&amp;hellip; And I decided to adapt my small cabinet to trick my brain that I&amp;rsquo;m sitting in the office. I got a monitor, mouse, and vertical laptop holder to save someplace. Keyboard right? That&amp;rsquo;s how I found &lt;code&gt;r/mk&lt;/code&gt;&amp;hellip; I got hooked into that within my head.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hashicorp Vault as Environment Manager</title>
      <link>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</link>
      <pubDate>Sat, 20 Jun 2020 20:09:43 +0200</pubDate>
      
      <guid>https://mrpopov.com/posts/hashicorp-vault-as-environment-manager/</guid>
      <description>&lt;h1 id=&#34;how-to-use-hashicorp-vault-as-dot-environment-manager&#34;&gt;How to use Hashicorp Vault as dot environment manager?&lt;/h1&gt;
&lt;p&gt;I decided to share this because I was looking for small, simple and easy to use tool where I would store dotenv secrets for my apps. And I found this nice and elegant solution which will allow you to control your application secrets with small bash script. ðŸ™‚&lt;/p&gt;
&lt;h2 id=&#34;pre-requirements&#34;&gt;Pre Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installed vault&lt;/li&gt;
&lt;li&gt;Finish setup instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find nicely described steps here: &lt;a href=&#34;https://learn.hashicorp.com/vault/getting-started/install&#34;&gt;Getting started&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Testing Mailer in Go</title>
      <link>https://mrpopov.com/posts/testing-mailer-in-go/</link>
      <pubDate>Sun, 08 Mar 2020 19:23:14 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/testing-mailer-in-go/</guid>
      <description>&lt;h2 id=&#34;forewords&#34;&gt;Forewords&lt;/h2&gt;
&lt;p&gt;I needed a way to test mail confirmation. When you are dealing with deb authentication you would like to be sure that this email exist. And usually I use &lt;code&gt;is_email_confirmed&lt;/code&gt; column next to user credentials in the database table. Once user hits siging endpoint as last step I send an email with confirmation token.&lt;/p&gt;
&lt;p&gt;I was looking on few popular tools across the Internet:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mailtrap.io/&#34;&gt;https://mailtrap.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mailcow.email/&#34;&gt;https://mailcow.email/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mailu.io/1.7/&#34;&gt;https://mailu.io/1.7/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://poste.io/&#34;&gt;https://poste.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-i-found&#34;&gt;What I found&lt;/h2&gt;
&lt;p&gt;My requirements were: run in docker, easy to config, basic functionality to render email. All things above quite heavy apps with complex configuration. After that I found found nice and lightweight way how to test it locally.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flexible Env in Go</title>
      <link>https://mrpopov.com/posts/flexible-env-in-go/</link>
      <pubDate>Sat, 07 Mar 2020 09:00:59 +0100</pubDate>
      
      <guid>https://mrpopov.com/posts/flexible-env-in-go/</guid>
      <description>&lt;h2 id=&#34;forewords&#34;&gt;Forewords&lt;/h2&gt;
&lt;p&gt;I was doing hobby project, nothing special, server with authentication few endpoints and connection to database.
I wrapped this project in docker to distribute project to another developer, he wanted to help with fronted but not that fluent at the backend part.
Then I realized that my friend does not want to struggle with database setup and so on. So, solution was straight forward - docker-compose.&lt;/p&gt;
&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;
&lt;p&gt;I prefer using &lt;code&gt;.env&lt;/code&gt; instead of typing stuff to cli. I found out really elegant solution. You can still use &lt;code&gt;.env&lt;/code&gt; and parse it easily with
&lt;code&gt;github.com/caarlos0/env/v6&lt;/code&gt;, specify default values or even load file (certificates etc). But in docker-compose you need to specify same ports for database for example. Here comes &lt;code&gt;github.com/joho/godotenv&lt;/code&gt;, if you provide environment variables via dockerfile or docker-compose it will override constants in your &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
